# model.py â€“ Teil des Otto KI-Systems
# Â© Christian Angermeier 2025

from pydantic import BaseModel, EmailStr, Field
from typing import List, Optional, Literal
from datetime import datetime, date



class Besprechung(BaseModel):
    name: str
    typ: str = "Serie"  # "Serie" oder "Einzeltermin"
    rhythmus: Literal["wÃ¶chentlich", "14-tÃ¤glich", "monatlich", "einmalig", "individuell"]
    tag: Optional[str] = None  # z.â€¯B. "Montag"
    von: Optional[str] = None  # z.â€¯B. "10:00"
    bis: Optional[str] = None  # z.â€¯B. "11:00"
    teilnehmer: List[str] = []  # enthÃ¤lt die Mongo-ID der Personen
    beschreibung: Optional[str] = None
    standard_agenda: Optional[List[str]] = []
    aktiv: bool = True
    mandant: Optional[str] = None  # ðŸ†• Mandant-Feld ergÃ¤nzt

class BesprechungAufgabe(BaseModel):
    beschreibung: str
    status: str = "offen"
    zustÃ¤ndig: Optional[str] = None
    termin: Optional[date] = None

class Besprechungstermin(BaseModel):
    besprechung_id: Optional[str] = Field(default=None, exclude=True)
    datum: datetime
    agenda: List[str] = []
    notizen: Optional[str] = None
    aufgaben: List[BesprechungAufgabe] = []
    wiedervorlage: Optional[datetime] = None

class InputBesprechungstermin(BaseModel):   
    datum: datetime
    agenda: List[str] = []
    notizen: Optional[str] = None
    aufgaben: List[BesprechungAufgabe] = []
    wiedervorlage: Optional[datetime] = None






    




