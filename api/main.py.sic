# main.py – Teil des Otto KI-Systems
# © Christian Angermeier 2025

from fastapi import FastAPI, Depends, Header, Request, HTTPException, status, Body, Query
from config import API_KEY
from fastapi.security.api_key import APIKeyHeader
from typing import List, Optional
from mongo import projekte_collection, personen_collection

# Api Controller
from controller.meeting_controller import router as meeting_router
from controller.project_controller import router as project_router
from controller.coder_controller import router as coder_router
from controller.personen_controller import router as personen_router
from controller.sharepoint_controller import router as sharepoint_router

from bson import ObjectId
from fastapi.openapi.utils import get_openapi
from config import GRAPH_URL, SITE_ID, DRIVE_ID, FOLDER
from email import policy
from email.parser import BytesParser
from helper import verify_api_key
import tempfile
import os
from docx import Document
import logging
import httpx
from bson.errors import InvalidId

app = FastAPI()

# Dynamisch Router einbinden mit Fehlerbehandlung
try:
    from controller.project_controller import router as project_router
    app.include_router(project_router)
except Exception as e:
    print(f"⚠️ Fehler beim Einbinden von project_controller: {e}")

try:
    from controller.personen_controller import router as personen_router
    app.include_router(personen_router)
except Exception as e:
    print(f"⚠️ Fehler beim Einbinden von personen_controller: {e}")

try:
    from controller.meeting_controller import router as meeting_router
    app.include_router(meeting_router)
except Exception as e:
    print(f"⚠️ Fehler beim Einbinden von meeting_controller: {e}")

try:
    from controller.sharepoint_controller import router as sharepoint_router
    app.include_router(sharepoint_router)
except Exception as e:
    print(f"⚠️ Fehler beim Einbinden von sharepoint_controller: {e}")

try:
    from controller.coder_controller import router as coder_router
    app.include_router(coder_router)
except Exception as e:
    print(f"⚠️ Fehler beim Einbinden von coder_controller: {e}")


def custom_openapi():
    if app.openapi_schema:
        return app.openapi_schema

    openapi_schema = get_openapi(
        title="OttoCore API",
        version="1.0.0",
        description="Die zentrale API für KI-Assistent Otto",
        routes=app.routes,
    )

    openapi_schema["servers"] = [
        {
            "url": "https://otto.isarlabs.de",
            "description": "Produktivserver"
        }
    ]

    app.openapi_schema = openapi_schema
    return app.openapi_schema

app.openapi = custom_openapi

@app.get("/")
async def root():
    return {"message": "KI-Drehkreuz läuft"}


def serialize_mongo(doc):
    doc = dict(doc)
    doc["id"] = str(doc["_id"])
    del doc["_id"]
    return doc